# GitHub Pages Deployment Workflow
# Production: Deploy to main branch
# PR Previews: Deploy to gh-pages branch

name: GitHub Pages Deployment

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

permissions:
  contents: write
  pages: write
  id-token: write
  pull-requests: write

jobs:
  # Build job - common for all deployments
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      
      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
      
      - name: Install dependencies
        run: pnpm install
      
      - name: Lint
        run: pnpm run lint --no-cache || true
      
      - name: TypeCheck
        run: pnpm run typecheck || true
      
      - name: Build
        run: pnpm run build
        env:
          # No base path needed as we detect it client-side
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: github-pages
          path: out
          if-no-files-found: error

  # Deploy to GitHub Pages for production
  deploy-production:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Deploy PR previews to gh-pages branch
  deploy-preview:
    if: github.event_name == 'pull_request'
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: github-pages
          path: dist
      
      - name: Deploy PR Preview
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          destination_dir: pr-preview/${{ github.event.pull_request.number }}
          keep_files: true
      
      - name: Find Comment
        uses: peter-evans/find-comment@v3
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: github-actions[bot]
          body-includes: "PR Preview"
      
      - name: Create or update PR comment
        uses: peter-evans/create-or-update-comment@v3
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ## PR Preview
            ‚úÖ PR Preview updated! 
            
            üîç [View Preview](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/pr-preview/${{ github.event.pull_request.number }}/)
            
            _Updated: ${{ github.event.pull_request.updated_at }}_
          edit-mode: replace